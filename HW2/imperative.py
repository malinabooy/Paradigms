# Обоснование выбора парадигмы:
# Императивный стиль выбран, так как задача связана с последовательным выполнением инструкций и изменением состояния
# программы. В данном случае, мы используем вложенные циклы для построения таблицы умножения.
# Каждая итерация цикла изменяет состояние вывода на экран, формируя таблицу.

def multiplication_table(n):
    for i in range(1, n + 1):
        for j in range(1, n + 1):
            print(f"{i} * {j} = {i * j}", end="\t")
        print()

# Пример использования
n = int(input("Введите число n: "))
multiplication_table(n)
